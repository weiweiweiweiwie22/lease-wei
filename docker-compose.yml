version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: lease-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456  # 修改为你自己的密码
      MYSQL_DATABASE: lease1
    ports:
      - "3306:3306"
    volumes:
      - ./init:/docker-entrypoint-initdb.d # 自动执行初始化SQL脚本
      - mysql-data:/var/lib/mysql

  # Redis 服务
  redis:
    image: redis:latest
    container_name: lease-redis
    restart: always
    ports:
      - "6379:6379"

  # MinIO 服务
  minio:
    image: minio/minio:latest
    container_name: lease-minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  # 后端管理应用
  web-admin:
    build:
      context: ./web/web-admin
      dockerfile: Dockerfile
    container_name: lease-web-admin
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
      - minio
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3306/lease1?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=GMT%2b8
      - spring.datasource.username=root
      - spring.datasource.password=123456 # 和上面的MySQL密码保持一致
      - spring.data.redis.host=redis
      - minio.endpoint=http://minio:9000

  # 前端用户应用
  web-app:
    build:
      context: ./web/web-app
      dockerfile: Dockerfile
    container_name: lease-web-app
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - redis
      - minio
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3306/lease1?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=GMT%2b8
      - spring.datasource.username=root
      - spring.datasource.password=123456 # 和上面的MySQL密码保持一致
      - spring.data.redis.host=redis

# 持久化数据卷
volumes:
  mysql-data:
  minio-data: